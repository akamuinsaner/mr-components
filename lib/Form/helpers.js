var requireValidate=function(e,n,t){return null==n||""===n||Array.isArray(n)&&!n.length?t.msg||"".concat(e," is required"):""},lengthValidate=function(e,n,t){return Array.isArray(n)&&n.length!==t.len||"string"==typeof n&&n.length!==t.len?t.msg||"".concat(e," requireds length of ").concat(t.len):""},maxValidate=function(e,n,t){return Array.isArray(n)&&n.length>t.max||"string"==typeof n&&n.length>t.max?t.msg||"".concat(e," cannot be longer then ").concat(t.max):"number"==typeof n&&n>t.max?t.msg||"".concat(e," cannot be larger then ").concat(t.max):""},minValidate=function(e,n,t){return Array.isArray(n)&&n.length<t.min||"string"==typeof n&&n.length<t.max?t.msg||"".concat(e," cannot be longer then ").concat(t.min):"number"==typeof n&&n<t.min?t.msg||"".concat(e," cannot be larger then ").concat(t.min):""},regexValidate=function(e,n,t){return t.regex.test(n)?"":t.msg||"".concat(e," should be the format of ").concat(t.regex)},ruleCheck=function(e,n,t){for(var r=0;r<t.length;r++){var a,i=t[r];if(i.required){if(a=requireValidate(e,n,i))return a}else if(i.len){if(a=lengthValidate(e,n,i))return a}else if(i.max){if(a=maxValidate(e,n,i))return a}else if(i.min){if(a=minValidate(e,n,i))return a}else if(i.regex&&!i.regex.test(n))if(a=regexValidate(e,n,i))return a}return""};export{ruleCheck};